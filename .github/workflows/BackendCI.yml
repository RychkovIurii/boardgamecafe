name: Backend CI

on:
  workflow_dispatch:
  push:
    branches: [ main, irychkov-actions ]
  pull_request:
    branches: [ main, irychkov-actions ]

jobs:
  backend:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:8
        ports:
          - 27017:27017
        options: "--health-cmd \"mongosh --quiet --eval 'db.runCommand({ ping: 1 })'\" --health-interval 10s --health-timeout 5s --health-retries 5"
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js 22.19.0 LTS
        uses: actions/setup-node@v5
        with:
          node-version: 22.19.0

      - name: Set up .env
        run: cp back.env.example back.env

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci --runInBand

      - name: Run backend server
        env:
          PORT: 5000
          MONGO_URI: mongodb://127.0.0.1:27017/cafeboardgame
        run: |
          npm run start > server.log 2>&1 &
          SERVER_PID=$!
          echo "Server PID: $SERVER_PID"
          for i in {1..15}; do
            if curl -s http://localhost:5000/health > /dev/null; then
              echo "Server is up!"
              break
            fi
            sleep 2
          done
          if ! curl -f http://localhost:5000/health > /dev/null; then
            echo "Server failed to start:"
            cat server.log
            kill $SERVER_PID || true
            exit 1
          fi
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV

      - name: Stop backend server
        if: always()
        env:
          SERVER_PID: ${{ env.SERVER_PID }}
        run: |
          if [ -n "$SERVER_PID" ] && ps -p "$SERVER_PID" > /dev/null 2>&1; then
            echo "Stopping backend server ($SERVER_PID)"
            kill "$SERVER_PID" || true
          fi

      # -------------------------------
      # üìù Comment in PR on failure
      # -------------------------------
      - name: Comment on PR if failed
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request?.number;
            if (!pr) {
              core.info('No PR number found; skipping comment.');
              return;
            }
            const body = [
              '**Backend CI** failed.',
              `Commit: \`${process.env.GITHUB_SHA.slice(0,7)}\``,
              `Logs: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body
            });
